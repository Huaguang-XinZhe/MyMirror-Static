{
  "component": "ComponentCategory",
  "props": {
    "errors": {},
    "tailwindVersion": "4.0",
    "baseUrl": "",
    "copyrightYear": "2025",
    "auth": {
      "isImpersonating": false,
      "user": {
        "email": "admin@fengzi.cool",
        "teams": [
          {
            "id": 123456,
            "name": "Long Live Freedom"
          }
        ],
        "can": {
          "upgradeToTeamLicense": false,
          "canUpgradeToStandardAllAccess": false
        }
      }
    },
    "canPurchasePlus": false,
    "componentsUrl": "/plus/ui-blocks/marketing",
    "preferredLanguage": "zh-CN",
    "archiveAvailable": false,
    "products": [
      {
        "name": "Marketing",
        "url": "/plus/ui-blocks/marketing",
        "isCurrent": false
      },
      {
        "name": "Application UI",
        "url": "/plus/ui-blocks/application-ui",
        "isCurrent": true
      },
      {
        "name": "Ecommerce",
        "url": "/plus/ui-blocks/ecommerce",
        "isCurrent": false
      }
    ],
    "categories": [
      {
        "name": "Application Shells",
        "anchor": "product-application-ui-application-shells",
        "subcategories": [
          {
            "name": "Stacked Layouts",
            "url": "/plus/ui-blocks/application-ui/application-shells/stacked",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Sidebar Layouts",
            "url": "/plus/ui-blocks/application-ui/application-shells/sidebar",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Multi-Column Layouts",
            "url": "/plus/ui-blocks/application-ui/application-shells/multi-column",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Headings",
        "anchor": "product-application-ui-headings",
        "subcategories": [
          {
            "name": "Page Headings",
            "url": "/plus/ui-blocks/application-ui/headings/page-headings",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Card Headings",
            "url": "/plus/ui-blocks/application-ui/headings/card-headings",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Section Headings",
            "url": "/plus/ui-blocks/application-ui/headings/section-headings",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Data Display",
        "anchor": "product-application-ui-data-display",
        "subcategories": [
          {
            "name": "Description Lists",
            "url": "/plus/ui-blocks/application-ui/data-display/description-lists",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Stats",
            "url": "/plus/ui-blocks/application-ui/data-display/stats",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Calendars",
            "url": "/plus/ui-blocks/application-ui/data-display/calendars",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Lists",
        "anchor": "product-application-ui-lists",
        "subcategories": [
          {
            "name": "Stacked Lists",
            "url": "/plus/ui-blocks/application-ui/lists/stacked-lists",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Tables",
            "url": "/plus/ui-blocks/application-ui/lists/tables",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Grid Lists",
            "url": "/plus/ui-blocks/application-ui/lists/grid-lists",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Feeds",
            "url": "/plus/ui-blocks/application-ui/lists/feeds",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Forms",
        "anchor": "product-application-ui-forms",
        "subcategories": [
          {
            "name": "Form Layouts",
            "url": "/plus/ui-blocks/application-ui/forms/form-layouts",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Input Groups",
            "url": "/plus/ui-blocks/application-ui/forms/input-groups",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Select Menus",
            "url": "/plus/ui-blocks/application-ui/forms/select-menus",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Sign-in and Registration",
            "url": "/plus/ui-blocks/application-ui/forms/sign-in-forms",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Textareas",
            "url": "/plus/ui-blocks/application-ui/forms/textareas",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Radio Groups",
            "url": "/plus/ui-blocks/application-ui/forms/radio-groups",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Checkboxes",
            "url": "/plus/ui-blocks/application-ui/forms/checkboxes",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Toggles",
            "url": "/plus/ui-blocks/application-ui/forms/toggles",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Action Panels",
            "url": "/plus/ui-blocks/application-ui/forms/action-panels",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Comboboxes",
            "url": "/plus/ui-blocks/application-ui/forms/comboboxes",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Feedback",
        "anchor": "product-application-ui-feedback",
        "subcategories": [
          {
            "name": "Alerts",
            "url": "/plus/ui-blocks/application-ui/feedback/alerts",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Empty States",
            "url": "/plus/ui-blocks/application-ui/feedback/empty-states",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Navigation",
        "anchor": "product-application-ui-navigation",
        "subcategories": [
          {
            "name": "Navbars",
            "url": "/plus/ui-blocks/application-ui/navigation/navbars",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Pagination",
            "url": "/plus/ui-blocks/application-ui/navigation/pagination",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Tabs",
            "url": "/plus/ui-blocks/application-ui/navigation/tabs",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Vertical Navigation",
            "url": "/plus/ui-blocks/application-ui/navigation/vertical-navigation",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Sidebar Navigation",
            "url": "/plus/ui-blocks/application-ui/navigation/sidebar-navigation",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Breadcrumbs",
            "url": "/plus/ui-blocks/application-ui/navigation/breadcrumbs",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Progress Bars",
            "url": "/plus/ui-blocks/application-ui/navigation/progress-bars",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Command Palettes",
            "url": "/plus/ui-blocks/application-ui/navigation/command-palettes",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Overlays",
        "anchor": "product-application-ui-overlays",
        "subcategories": [
          {
            "name": "Modal Dialogs",
            "url": "/plus/ui-blocks/application-ui/overlays/modal-dialogs",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Drawers",
            "url": "/plus/ui-blocks/application-ui/overlays/drawers",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Notifications",
            "url": "/plus/ui-blocks/application-ui/overlays/notifications",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Elements",
        "anchor": "product-application-ui-elements",
        "subcategories": [
          {
            "name": "Avatars",
            "url": "/plus/ui-blocks/application-ui/elements/avatars",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Badges",
            "url": "/plus/ui-blocks/application-ui/elements/badges",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Dropdowns",
            "url": "/plus/ui-blocks/application-ui/elements/dropdowns",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Buttons",
            "url": "/plus/ui-blocks/application-ui/elements/buttons",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Button Groups",
            "url": "/plus/ui-blocks/application-ui/elements/button-groups",
            "isNew": false,
            "isCurrent": true
          }
        ]
      },
      {
        "name": "Layout",
        "anchor": "product-application-ui-layout",
        "subcategories": [
          {
            "name": "Containers",
            "url": "/plus/ui-blocks/application-ui/layout/containers",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Cards",
            "url": "/plus/ui-blocks/application-ui/layout/cards",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "List containers",
            "url": "/plus/ui-blocks/application-ui/layout/list-containers",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Media Objects",
            "url": "/plus/ui-blocks/application-ui/layout/media-objects",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Dividers",
            "url": "/plus/ui-blocks/application-ui/layout/dividers",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Page Examples",
        "anchor": "product-application-ui-page-examples",
        "subcategories": [
          {
            "name": "Home Screens",
            "url": "/plus/ui-blocks/application-ui/page-examples/home-screens",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Detail Screens",
            "url": "/plus/ui-blocks/application-ui/page-examples/detail-screens",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Settings Screens",
            "url": "/plus/ui-blocks/application-ui/page-examples/settings-screens",
            "isNew": false,
            "isCurrent": false
          }
        ]
      }
    ],
    "subcategory": {
      "name": "Button Groups",
      "description": "Button group examples for Tailwind CSS, designed and built by the creators of the framework.",
      "introduction": "Use these Tailwind CSS button group components to group buttons with other elements like dropdowns and checkboxes, for things like filtering options, pagination, or buttons with multiple actions. These components are designed and built by the Tailwind CSS team, and include a variety of different styles and layouts.",
      "url": "/plus/ui-blocks/application-ui/elements/button-groups",
      "category": {
        "name": "Elements",
        "url": "/plus/ui-blocks/application-ui#product-application-ui-elements",
        "product": {
          "name": "Application UI",
          "url": "/plus/ui-blocks/application-ui"
        }
      },
      "components": [
        {
          "name": "Basic",
          "uuid": "dc2468c1992adb5950f2d93cf589a65e",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"flex items-center justify-center bg-white p-8\">\n    \n  <span class=\"isolate inline-flex rounded-md shadow-xs\">\n    <button type=\"button\" class=\"relative inline-flex items-center rounded-l-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">Years</button>\n    <button type=\"button\" class=\"relative -ml-px inline-flex items-center bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">Months</button>\n    <button type=\"button\" class=\"relative -ml-px inline-flex items-center rounded-r-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">Days</button>\n  </span>\n\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 3,
            "code": "export default function Example() {\n  return (\n    <span className=\"isolate inline-flex rounded-md shadow-sm\">\n      <button\n        type=\"button\"\n        className=\"relative inline-flex items-center rounded-l-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        Years\n      </button>\n      <button\n        type=\"button\"\n        className=\"relative -ml-px inline-flex items-center bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        Months\n      </button>\n      <button\n        type=\"button\"\n        className=\"relative -ml-px inline-flex items-center rounded-r-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        Days\n      </button>\n    </span>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 100,
          "smallWidth": 375,
          "smallHeight": 100
        },
        {
          "name": "Icon only",
          "uuid": "0d33369a2dac81cc4ed2f8b1e997a9cb",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"flex items-center justify-center bg-white p-8\">\n    \n  <span class=\"isolate inline-flex rounded-md shadow-xs\">\n    <button type=\"button\" class=\"relative inline-flex items-center rounded-l-md bg-white px-2 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n      <span class=\"sr-only\">Previous</span>\n      <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M11.78 5.22a.75.75 0 0 1 0 1.06L8.06 10l3.72 3.72a.75.75 0 1 1-1.06 1.06l-4.25-4.25a.75.75 0 0 1 0-1.06l4.25-4.25a.75.75 0 0 1 1.06 0Z\" clip-rule=\"evenodd\"></path>\n</svg>\n    </button>\n    <button type=\"button\" class=\"relative -ml-px inline-flex items-center rounded-r-md bg-white px-2 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n      <span class=\"sr-only\">Next</span>\n      <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M8.22 5.22a.75.75 0 0 1 1.06 0l4.25 4.25a.75.75 0 0 1 0 1.06l-4.25 4.25a.75.75 0 0 1-1.06-1.06L11.94 10 8.22 6.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"></path>\n</svg>\n    </button>\n  </span>\n\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 3,
            "code": "import { ChevronLeftIcon, ChevronRightIcon } from '@heroicons/react/20/solid'\n\nexport default function Example() {\n  return (\n    <span className=\"isolate inline-flex rounded-md shadow-sm\">\n      <button\n        type=\"button\"\n        className=\"relative inline-flex items-center rounded-l-md bg-white px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        <span className=\"sr-only\">Previous</span>\n        <ChevronLeftIcon aria-hidden=\"true\" className=\"size-5\" />\n      </button>\n      <button\n        type=\"button\"\n        className=\"relative -ml-px inline-flex items-center rounded-r-md bg-white px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        <span className=\"sr-only\">Next</span>\n        <ChevronRightIcon aria-hidden=\"true\" className=\"size-5\" />\n      </button>\n    </span>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 100,
          "smallWidth": 375,
          "smallHeight": 100
        },
        {
          "name": "With stat",
          "uuid": "cbd15ccb80090a5dfb2d647be03b6ee9",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"flex items-center justify-center bg-white p-8\">\n    \n  <span class=\"isolate inline-flex rounded-md shadow-xs\">\n    <button type=\"button\" class=\"relative inline-flex items-center gap-x-1.5 rounded-l-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n      <svg class=\"-ml-0.5 size-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M10 2c-1.716 0-3.408.106-5.07.31C3.806 2.45 3 3.414 3 4.517V17.25a.75.75 0 0 0 1.075.676L10 15.082l5.925 2.844A.75.75 0 0 0 17 17.25V4.517c0-1.103-.806-2.068-1.93-2.207A41.403 41.403 0 0 0 10 2Z\" clip-rule=\"evenodd\"></path>\n</svg>\n      Bookmark\n    </button>\n    <button type=\"button\" class=\"relative -ml-px inline-flex items-center rounded-r-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">12k</button>\n  </span>\n\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 3,
            "code": "import { BookmarkIcon } from '@heroicons/react/20/solid'\n\nexport default function Example() {\n  return (\n    <span className=\"isolate inline-flex rounded-md shadow-sm\">\n      <button\n        type=\"button\"\n        className=\"relative inline-flex items-center gap-x-1.5 rounded-l-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        <BookmarkIcon aria-hidden=\"true\" className=\"-ml-0.5 size-5 text-gray-400\" />\n        Bookmark\n      </button>\n      <button\n        type=\"button\"\n        className=\"relative -ml-px inline-flex items-center rounded-r-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        12k\n      </button>\n    </span>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 100,
          "smallWidth": 375,
          "smallHeight": 100
        },
        {
          "name": "With dropdown",
          "uuid": "bfc7e9cc9d7b5762cb139096ac3266c1",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": true,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"flex items-start justify-center bg-white p-8\" style=\"min-height: 256px\">\n    \n  <div class=\"inline-flex rounded-md shadow-xs\">\n    <button type=\"button\" class=\"relative inline-flex items-center rounded-l-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">Save changes</button>\n    <div x-data=\"Components.menu({ open: true })\" x-init=\"init()\" @keydown.escape.stop=\"open = false; focusButton()\" @click.away=\"onClickAway($event)\" class=\"relative -ml-px block\">\n      <button type=\"button\" class=\"relative inline-flex items-center rounded-r-md bg-white px-2 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\" id=\"option-menu-button\" x-ref=\"button\" @click=\"onButtonClick()\" @keyup.space.prevent=\"onButtonEnter()\" @keydown.enter.prevent=\"onButtonEnter()\" aria-expanded=\"true\" aria-haspopup=\"true\" x-bind:aria-expanded=\"open.toString()\" @keydown.arrow-up.prevent=\"onArrowUp()\" @keydown.arrow-down.prevent=\"onArrowDown()\">\n        <span class=\"sr-only\">Open options</span>\n        <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"></path>\n</svg>\n      </button>\n      \n        <div x-show=\"open\" x-transition:enter=\"transition ease-out duration-100\" x-transition:enter-start=\"transform opacity-0 scale-95\" x-transition:enter-end=\"transform opacity-100 scale-100\" x-transition:leave=\"transition ease-in duration-75\" x-transition:leave-start=\"transform opacity-100 scale-100\" x-transition:leave-end=\"transform opacity-0 scale-95\" class=\"absolute right-0 z-10 mt-2 -mr-1 w-56 origin-top-right rounded-md bg-white ring-1 shadow-lg ring-black/5 focus:outline-hidden\" x-ref=\"menu-items\" x-description=\"Dropdown menu, show/hide based on menu state.\" x-bind:aria-activedescendant=\"activeDescendant\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"option-menu-button\" tabindex=\"-1\" @keydown.arrow-up.prevent=\"onArrowUp()\" @keydown.arrow-down.prevent=\"onArrowDown()\" @keydown.tab=\"open = false\" @keydown.enter.prevent=\"open = false; focusButton()\" @keyup.space.prevent=\"open = false; focusButton()\">\n          <div class=\"py-1\" role=\"none\">\n            <a href=\"#\" class=\"text-gray-700 block px-4 py-2 text-sm\" x-state:on=\"Active\" x-state:off=\"Not Active\" :class=\"{ 'bg-gray-100 text-gray-900 outline-hidden': activeIndex === 0, 'text-gray-700': !(activeIndex === 0) }\" role=\"menuitem\" tabindex=\"-1\" id=\"option-menu-item-0\" @mouseenter=\"onMouseEnter($event)\" @mousemove=\"onMouseMove($event, 0)\" @mouseleave=\"onMouseLeave($event)\" @click=\"open = false; focusButton()\">Save and schedule</a>\n            <a href=\"#\" class=\"text-gray-700 block px-4 py-2 text-sm\" :class=\"{ 'bg-gray-100 text-gray-900 outline-hidden': activeIndex === 1, 'text-gray-700': !(activeIndex === 1) }\" role=\"menuitem\" tabindex=\"-1\" id=\"option-menu-item-1\" @mouseenter=\"onMouseEnter($event)\" @mousemove=\"onMouseMove($event, 1)\" @mouseleave=\"onMouseLeave($event)\" @click=\"open = false; focusButton()\">Save and publish</a>\n            <a href=\"#\" class=\"text-gray-700 block px-4 py-2 text-sm\" :class=\"{ 'bg-gray-100 text-gray-900 outline-hidden': activeIndex === 2, 'text-gray-700': !(activeIndex === 2) }\" role=\"menuitem\" tabindex=\"-1\" id=\"option-menu-item-2\" @mouseenter=\"onMouseEnter($event)\" @mousemove=\"onMouseMove($event, 2)\" @mouseleave=\"onMouseLeave($event)\" @click=\"open = false; focusButton()\">Export PDF</a>\n            \n          </div>\n        </div>\n      \n    </div>\n  </div>\n\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 3,
            "code": "import { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/react'\nimport { ChevronDownIcon } from '@heroicons/react/20/solid'\n\nconst items = [\n  { name: 'Save and schedule', href: '#' },\n  { name: 'Save and publish', href: '#' },\n  { name: 'Export PDF', href: '#' },\n]\n\nexport default function Example() {\n  return (\n    <div className=\"inline-flex rounded-md shadow-sm\">\n      <button\n        type=\"button\"\n        className=\"relative inline-flex items-center rounded-l-md bg-white px-3 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\"\n      >\n        Save changes\n      </button>\n      <Menu as=\"div\" className=\"relative -ml-px block\">\n        <MenuButton className=\"relative inline-flex items-center rounded-r-md bg-white px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-10\">\n          <span className=\"sr-only\">Open options</span>\n          <ChevronDownIcon aria-hidden=\"true\" className=\"size-5\" />\n        </MenuButton>\n        <MenuItems\n          transition\n          className=\"absolute right-0 z-10 -mr-1 mt-2 w-56 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black/5 transition focus:outline-none data-[closed]:scale-95 data-[closed]:transform data-[closed]:opacity-0 data-[enter]:duration-100 data-[leave]:duration-75 data-[enter]:ease-out data-[leave]:ease-in\"\n        >\n          <div className=\"py-1\">\n            {items.map((item) => (\n              <MenuItem key={item.name}>\n                <a\n                  href={item.href}\n                  className=\"block px-4 py-2 text-sm text-gray-700 data-[focus]:bg-gray-100 data-[focus]:text-gray-900 data-[focus]:outline-none\"\n                >\n                  {item.name}\n                </a>\n              </MenuItem>\n            ))}\n          </div>\n        </MenuItems>\n      </Menu>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 256,
          "smallWidth": 375,
          "smallHeight": 256
        },
        {
          "name": "With checkbox and dropdown",
          "uuid": "9e4d2ae1944600eac288621ec31cf6e2",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"flex items-center justify-center bg-white p-8\">\n    \n  <span class=\"inline-flex\">\n    <span class=\"inline-flex shrink-0 items-center rounded-l-md border border-gray-300 bg-white px-2 py-2\">\n      <div class=\"group grid size-4 grid-cols-1\">\n        <input name=\"select-all\" aria-label=\"Select all\" type=\"checkbox\" class=\"col-start-1 row-start-1 appearance-none rounded-sm border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto\">\n        <svg class=\"pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-disabled:stroke-gray-950/25\" viewBox=\"0 0 14 14\" fill=\"none\">\n          <path class=\"opacity-0 group-has-checked:opacity-100\" d=\"M3 8L6 11L11 3.5\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n          <path class=\"opacity-0 group-has-indeterminate:opacity-100\" d=\"M3 7H11\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></path>\n        </svg>\n      </div>\n    </span>\n    <div class=\"-ml-px grid grid-cols-1\">\n      <select id=\"message-type\" name=\"message-type\" aria-label=\"Select message type\" class=\"col-start-1 row-start-1 w-full appearance-none rounded-r-md bg-white py-1.5 pr-8 pl-3 text-base text-gray-900 outline-1 -outline-offset-1 outline-gray-300 focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\">\n        <option>Unread messages</option>\n        <option>Sent messages</option>\n        <option>All messages</option>\n      </select>\n      <svg class=\"pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-gray-500 sm:size-4\" viewBox=\"0 0 16 16\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\"></path>\n</svg>\n    </div>\n  </span>\n\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 3,
            "code": "import { ChevronDownIcon } from '@heroicons/react/16/solid'\n\nexport default function Example() {\n  return (\n    <span className=\"inline-flex\">\n      <span className=\"inline-flex shrink-0 items-center rounded-l-md border border-gray-300 bg-white px-2 py-2\">\n        <div className=\"group grid size-4 grid-cols-1\">\n          <input\n            name=\"select-all\"\n            type=\"checkbox\"\n            aria-label=\"Select all\"\n            className=\"col-start-1 row-start-1 appearance-none rounded border border-gray-300 bg-white checked:border-indigo-600 checked:bg-indigo-600 indeterminate:border-indigo-600 indeterminate:bg-indigo-600 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600 disabled:border-gray-300 disabled:bg-gray-100 disabled:checked:bg-gray-100 forced-colors:appearance-auto\"\n          />\n          <svg\n            fill=\"none\"\n            viewBox=\"0 0 14 14\"\n            className=\"pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-gray-950/25\"\n          >\n            <path\n              d=\"M3 8L6 11L11 3.5\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"opacity-0 group-has-[:checked]:opacity-100\"\n            />\n            <path\n              d=\"M3 7H11\"\n              strokeWidth={2}\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              className=\"opacity-0 group-has-[:indeterminate]:opacity-100\"\n            />\n          </svg>\n        </div>\n      </span>\n      <div className=\"-ml-px grid grid-cols-1\">\n        <select\n          id=\"message-type\"\n          name=\"message-type\"\n          aria-label=\"Select message type\"\n          className=\"col-start-1 row-start-1 w-full appearance-none rounded-r-md bg-white py-1.5 pl-3 pr-8 text-base text-gray-900 outline outline-1 -outline-offset-1 outline-gray-300 focus:outline focus:outline-2 focus:-outline-offset-2 focus:outline-indigo-600 sm:text-sm/6\"\n        >\n          <option>Unread messages</option>\n          <option>Sent messages</option>\n          <option>All messages</option>\n        </select>\n        <ChevronDownIcon\n          aria-hidden=\"true\"\n          className=\"pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-gray-500 sm:size-4\"\n        />\n      </div>\n    </span>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 100,
          "smallWidth": 375,
          "smallHeight": 100
        }
      ]
    }
  },
  "url": "/plus/ui-blocks/application-ui/elements/button-groups",
  "version": "b2adf83a16a94d2e0fb52a1c5f3049f3",
  "clearHistory": false,
  "encryptHistory": false
}