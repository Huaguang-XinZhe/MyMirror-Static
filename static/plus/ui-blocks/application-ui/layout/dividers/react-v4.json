{
  "component": "ComponentCategory",
  "props": {
    "errors": {},
    "tailwindVersion": "4.0",
    "baseUrl": "",
    "copyrightYear": "2025",
    "auth": {
      "isImpersonating": false,
      "user": {
        "email": "admin@fengzi.cool",
        "teams": [
          {
            "id": 123456,
            "name": "Long Live Freedom"
          }
        ],
        "can": {
          "upgradeToTeamLicense": false,
          "canUpgradeToStandardAllAccess": false
        }
      }
    },
    "canPurchasePlus": false,
    "componentsUrl": "/plus/ui-blocks/marketing",
    "preferredLanguage": "zh-CN",
    "archiveAvailable": false,
    "products": [
      {
        "name": "Marketing",
        "url": "/plus/ui-blocks/marketing",
        "isCurrent": false
      },
      {
        "name": "Application UI",
        "url": "/plus/ui-blocks/application-ui",
        "isCurrent": true
      },
      {
        "name": "Ecommerce",
        "url": "/plus/ui-blocks/ecommerce",
        "isCurrent": false
      }
    ],
    "categories": [
      {
        "name": "Application Shells",
        "anchor": "product-application-ui-application-shells",
        "subcategories": [
          {
            "name": "Stacked Layouts",
            "url": "/plus/ui-blocks/application-ui/application-shells/stacked",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Sidebar Layouts",
            "url": "/plus/ui-blocks/application-ui/application-shells/sidebar",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Multi-Column Layouts",
            "url": "/plus/ui-blocks/application-ui/application-shells/multi-column",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Headings",
        "anchor": "product-application-ui-headings",
        "subcategories": [
          {
            "name": "Page Headings",
            "url": "/plus/ui-blocks/application-ui/headings/page-headings",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Card Headings",
            "url": "/plus/ui-blocks/application-ui/headings/card-headings",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Section Headings",
            "url": "/plus/ui-blocks/application-ui/headings/section-headings",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Data Display",
        "anchor": "product-application-ui-data-display",
        "subcategories": [
          {
            "name": "Description Lists",
            "url": "/plus/ui-blocks/application-ui/data-display/description-lists",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Stats",
            "url": "/plus/ui-blocks/application-ui/data-display/stats",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Calendars",
            "url": "/plus/ui-blocks/application-ui/data-display/calendars",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Lists",
        "anchor": "product-application-ui-lists",
        "subcategories": [
          {
            "name": "Stacked Lists",
            "url": "/plus/ui-blocks/application-ui/lists/stacked-lists",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Tables",
            "url": "/plus/ui-blocks/application-ui/lists/tables",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Grid Lists",
            "url": "/plus/ui-blocks/application-ui/lists/grid-lists",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Feeds",
            "url": "/plus/ui-blocks/application-ui/lists/feeds",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Forms",
        "anchor": "product-application-ui-forms",
        "subcategories": [
          {
            "name": "Form Layouts",
            "url": "/plus/ui-blocks/application-ui/forms/form-layouts",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Input Groups",
            "url": "/plus/ui-blocks/application-ui/forms/input-groups",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Select Menus",
            "url": "/plus/ui-blocks/application-ui/forms/select-menus",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Sign-in and Registration",
            "url": "/plus/ui-blocks/application-ui/forms/sign-in-forms",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Textareas",
            "url": "/plus/ui-blocks/application-ui/forms/textareas",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Radio Groups",
            "url": "/plus/ui-blocks/application-ui/forms/radio-groups",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Checkboxes",
            "url": "/plus/ui-blocks/application-ui/forms/checkboxes",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Toggles",
            "url": "/plus/ui-blocks/application-ui/forms/toggles",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Action Panels",
            "url": "/plus/ui-blocks/application-ui/forms/action-panels",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Comboboxes",
            "url": "/plus/ui-blocks/application-ui/forms/comboboxes",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Feedback",
        "anchor": "product-application-ui-feedback",
        "subcategories": [
          {
            "name": "Alerts",
            "url": "/plus/ui-blocks/application-ui/feedback/alerts",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Empty States",
            "url": "/plus/ui-blocks/application-ui/feedback/empty-states",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Navigation",
        "anchor": "product-application-ui-navigation",
        "subcategories": [
          {
            "name": "Navbars",
            "url": "/plus/ui-blocks/application-ui/navigation/navbars",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Pagination",
            "url": "/plus/ui-blocks/application-ui/navigation/pagination",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Tabs",
            "url": "/plus/ui-blocks/application-ui/navigation/tabs",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Vertical Navigation",
            "url": "/plus/ui-blocks/application-ui/navigation/vertical-navigation",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Sidebar Navigation",
            "url": "/plus/ui-blocks/application-ui/navigation/sidebar-navigation",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Breadcrumbs",
            "url": "/plus/ui-blocks/application-ui/navigation/breadcrumbs",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Progress Bars",
            "url": "/plus/ui-blocks/application-ui/navigation/progress-bars",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Command Palettes",
            "url": "/plus/ui-blocks/application-ui/navigation/command-palettes",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Overlays",
        "anchor": "product-application-ui-overlays",
        "subcategories": [
          {
            "name": "Modal Dialogs",
            "url": "/plus/ui-blocks/application-ui/overlays/modal-dialogs",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Drawers",
            "url": "/plus/ui-blocks/application-ui/overlays/drawers",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Notifications",
            "url": "/plus/ui-blocks/application-ui/overlays/notifications",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Elements",
        "anchor": "product-application-ui-elements",
        "subcategories": [
          {
            "name": "Avatars",
            "url": "/plus/ui-blocks/application-ui/elements/avatars",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Badges",
            "url": "/plus/ui-blocks/application-ui/elements/badges",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Dropdowns",
            "url": "/plus/ui-blocks/application-ui/elements/dropdowns",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Buttons",
            "url": "/plus/ui-blocks/application-ui/elements/buttons",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Button Groups",
            "url": "/plus/ui-blocks/application-ui/elements/button-groups",
            "isNew": false,
            "isCurrent": false
          }
        ]
      },
      {
        "name": "Layout",
        "anchor": "product-application-ui-layout",
        "subcategories": [
          {
            "name": "Containers",
            "url": "/plus/ui-blocks/application-ui/layout/containers",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Cards",
            "url": "/plus/ui-blocks/application-ui/layout/cards",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "List containers",
            "url": "/plus/ui-blocks/application-ui/layout/list-containers",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Media Objects",
            "url": "/plus/ui-blocks/application-ui/layout/media-objects",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Dividers",
            "url": "/plus/ui-blocks/application-ui/layout/dividers",
            "isNew": false,
            "isCurrent": true
          }
        ]
      },
      {
        "name": "Page Examples",
        "anchor": "product-application-ui-page-examples",
        "subcategories": [
          {
            "name": "Home Screens",
            "url": "/plus/ui-blocks/application-ui/page-examples/home-screens",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Detail Screens",
            "url": "/plus/ui-blocks/application-ui/page-examples/detail-screens",
            "isNew": false,
            "isCurrent": false
          },
          {
            "name": "Settings Screens",
            "url": "/plus/ui-blocks/application-ui/page-examples/settings-screens",
            "isNew": false,
            "isCurrent": false
          }
        ]
      }
    ],
    "subcategory": {
      "name": "Dividers",
      "description": "Dividers and horizontal rule examples for Tailwind CSS, designed and built by the creators of the framework.",
      "introduction": "Use these Tailwind CSS divider components to separate content sections with horizontal lines, featuring buttons, toolbars, titles, labels, and icons. These dividers are designed and built by the Tailwind CSS team, and include a variety of different styles and layouts.",
      "url": "/plus/ui-blocks/application-ui/layout/dividers",
      "category": {
        "name": "Layout",
        "url": "/plus/ui-blocks/application-ui#product-application-ui-layout",
        "product": {
          "name": "Application UI",
          "url": "/plus/ui-blocks/application-ui"
        }
      },
      "components": [
        {
          "name": "With label",
          "uuid": "5b1c73b36ca9bc99f9f17fea27003e8e",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-center\">\n      <span class=\"bg-white px-2 text-sm text-gray-500\">Continue</span>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "export default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <span className=\"bg-white px-2 text-sm text-gray-500\">Continue</span>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 84,
          "smallWidth": 375,
          "smallHeight": 84
        },
        {
          "name": "With icon",
          "uuid": "66b415f2ce14b5bf67c3b27f60582073",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-center\">\n      <span class=\"bg-white px-2 text-gray-500\">\n        <svg class=\"size-5 text-gray-500\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path d=\"M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z\"></path>\n</svg>\n      </span>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "import { PlusIcon } from '@heroicons/react/20/solid'\n\nexport default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <span className=\"bg-white px-2 text-gray-500\">\n          <PlusIcon aria-hidden=\"true\" className=\"size-5 text-gray-500\" />\n        </span>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 84,
          "smallWidth": 375,
          "smallHeight": 84
        },
        {
          "name": "With label on left",
          "uuid": "8fbd91ccd8fa7759ad4de9c874cfb23e",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-start\">\n      <span class=\"bg-white pr-2 text-sm text-gray-500\">Continue</span>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "export default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-start\">\n        <span className=\"bg-white pr-2 text-sm text-gray-500\">Continue</span>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 84,
          "smallWidth": 375,
          "smallHeight": 84
        },
        {
          "name": "With title",
          "uuid": "11f4cc831d9b28843ade041e089f77b3",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-center\">\n      <span class=\"bg-white px-3 text-base font-semibold text-gray-900\">Projects</span>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "export default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <span className=\"bg-white px-3 text-base font-semibold text-gray-900\">Projects</span>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 88,
          "smallWidth": 375,
          "smallHeight": 88
        },
        {
          "name": "With title on left",
          "uuid": "b2f379aa4cf58206058b791ad1e3bda1",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-start\">\n      <span class=\"bg-white pr-3 text-base font-semibold text-gray-900\">Projects</span>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "export default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-start\">\n        <span className=\"bg-white pr-3 text-base font-semibold text-gray-900\">Projects</span>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 88,
          "smallWidth": 375,
          "smallHeight": 88
        },
        {
          "name": "With button",
          "uuid": "4266c193a356c171358af17116a016cc",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-center\">\n      <button type=\"button\" class=\"inline-flex items-center gap-x-1.5 rounded-full bg-white px-3 py-1.5 text-sm font-semibold text-gray-900 ring-1 shadow-xs ring-gray-300 ring-inset hover:bg-gray-50\">\n        <svg class=\"-mr-0.5 -ml-1 size-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path d=\"M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z\"></path>\n</svg>\n        Button text\n      </button>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "import { PlusIcon } from '@heroicons/react/20/solid'\n\nexport default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center gap-x-1.5 rounded-full bg-white px-3 py-1.5 text-sm font-semibold text-gray-900 ring-1 shadow-xs ring-gray-300 ring-inset hover:bg-gray-50\"\n        >\n          <PlusIcon aria-hidden=\"true\" className=\"-mr-0.5 -ml-1 size-5 text-gray-400\" />\n          Button text\n        </button>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 96,
          "smallWidth": 375,
          "smallHeight": 96
        },
        {
          "name": "With title and button",
          "uuid": "f3ffaa3530ce92de21f66196ff69bf25",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex items-center justify-between\">\n      <span class=\"bg-white pr-3 text-base font-semibold text-gray-900\">Projects</span>\n      <button type=\"button\" class=\"inline-flex items-center gap-x-1.5 rounded-full bg-white px-3 py-1.5 text-sm font-semibold text-gray-900 ring-1 shadow-xs ring-gray-300 ring-inset hover:bg-gray-50\">\n        <svg class=\"-mr-0.5 -ml-1 size-5 text-gray-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path d=\"M10.75 4.75a.75.75 0 0 0-1.5 0v4.5h-4.5a.75.75 0 0 0 0 1.5h4.5v4.5a.75.75 0 0 0 1.5 0v-4.5h4.5a.75.75 0 0 0 0-1.5h-4.5v-4.5Z\"></path>\n</svg>\n        <span>Button text</span>\n      </button>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "import { PlusIcon } from '@heroicons/react/20/solid'\n\nexport default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex items-center justify-between\">\n        <span className=\"bg-white pr-3 text-base font-semibold text-gray-900\">Projects</span>\n        <button\n          type=\"button\"\n          className=\"inline-flex items-center gap-x-1.5 rounded-full bg-white px-3 py-1.5 text-sm font-semibold text-gray-900 ring-1 shadow-xs ring-gray-300 ring-inset hover:bg-gray-50\"\n        >\n          <PlusIcon aria-hidden=\"true\" className=\"-mr-0.5 -ml-1 size-5 text-gray-400\" />\n          <span>Button text</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 96,
          "smallWidth": 375,
          "smallHeight": 96
        },
        {
          "name": "With toolbar",
          "uuid": "5942d989e5fcfa07fafb2df35300f682",
          "isNew": false,
          "downloadable": true,
          "imageCreditsHtml": null,
          "requiresJavaScript": false,
          "archived": false,
          "iframeHtml": "<!doctype html><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\"><link rel=\"preconnect\" href=\"https://rsms.me/\"><link rel=\"stylesheet\" href=\"https://rsms.me/inter/inter.css\"><link rel=\"stylesheet\" href=\"/plus-assets/build/iframe/components.css?hash=1907d2476e1de77d68dab0ee685e463a\"><script src=\"/plus-assets/build/iframe/components.js?hash=25df7d34d043de1c316a31211aa744b1\"></script><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\" /><link rel=\"modulepreload\" href=\"/plus-assets/build/assets/iframe-CBshCjZa.js\" /><script type=\"module\" src=\"/plus-assets/build/assets/iframe-alpine-Dg6QrlCv.js\"></script>\n<script>\n     window.addEventListener('load', () => window.setTimeout(() => {\n        const makeLink = (asset) => {\n            const link = document.createElement('link')\n\n            Object.keys(asset).forEach((attribute) => {\n                link.setAttribute(attribute, asset[attribute])\n            })\n\n            return link\n        }\n\n        const loadNext = (assets, count) => window.setTimeout(() => {\n            if (count > assets.length) {\n                count = assets.length\n\n                if (count === 0) {\n                    return\n                }\n            }\n\n            const fragment = new DocumentFragment\n\n            while (count > 0) {\n                const link = makeLink(assets.shift())\n                fragment.append(link)\n                count--\n\n                if (assets.length) {\n                    link.onload = () => loadNext(assets, 1)\n                    link.onerror = () => loadNext(assets, 1)\n                }\n            }\n\n            document.head.append(fragment)\n        })\n\n        loadNext([], 3)\n    }))\n</script><style>body { -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; }</style><body>\n  <div class=\"bg-white py-8\">\n    <div class=\"mx-auto max-w-2xl px-4\">\n      \n  <div class=\"relative\">\n    <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n      <div class=\"w-full border-t border-gray-300\"></div>\n    </div>\n    <div class=\"relative flex justify-center\">\n      <span class=\"isolate inline-flex -space-x-px rounded-md shadow-xs\">\n        <button type=\"button\" class=\"relative inline-flex items-center rounded-l-md bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n          <span class=\"sr-only\">Edit</span>\n          <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path d=\"m2.695 14.762-1.262 3.155a.5.5 0 0 0 .65.65l3.155-1.262a4 4 0 0 0 1.343-.886L17.5 5.501a2.121 2.121 0 0 0-3-3L3.58 13.419a4 4 0 0 0-.885 1.343Z\"></path>\n</svg>\n        </button>\n        <button type=\"button\" class=\"relative inline-flex items-center bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n          <span class=\"sr-only\">Attachment</span>\n          <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M15.621 4.379a3 3 0 0 0-4.242 0l-7 7a3 3 0 0 0 4.241 4.243h.001l.497-.5a.75.75 0 0 1 1.064 1.057l-.498.501-.002.002a4.5 4.5 0 0 1-6.364-6.364l7-7a4.5 4.5 0 0 1 6.368 6.36l-3.455 3.553A2.625 2.625 0 1 1 9.52 9.52l3.45-3.451a.75.75 0 1 1 1.061 1.06l-3.45 3.451a1.125 1.125 0 0 0 1.587 1.595l3.454-3.553a3 3 0 0 0 0-4.242Z\" clip-rule=\"evenodd\"></path>\n</svg>\n        </button>\n        <button type=\"button\" class=\"relative inline-flex items-center bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n          <span class=\"sr-only\">Annotate</span>\n          <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M10 2c-2.236 0-4.43.18-6.57.524C1.993 2.755 1 4.014 1 5.426v5.148c0 1.413.993 2.67 2.43 2.902 1.168.188 2.352.327 3.55.414.28.02.521.18.642.413l1.713 3.293a.75.75 0 0 0 1.33 0l1.713-3.293a.783.783 0 0 1 .642-.413 41.102 41.102 0 0 0 3.55-.414c1.437-.231 2.43-1.49 2.43-2.902V5.426c0-1.413-.993-2.67-2.43-2.902A41.289 41.289 0 0 0 10 2ZM6.75 6a.75.75 0 0 0 0 1.5h6.5a.75.75 0 0 0 0-1.5h-6.5Zm0 2.5a.75.75 0 0 0 0 1.5h3.5a.75.75 0 0 0 0-1.5h-3.5Z\" clip-rule=\"evenodd\"></path>\n</svg>\n        </button>\n        <button type=\"button\" class=\"relative inline-flex items-center rounded-r-md bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\">\n          <span class=\"sr-only\">Delete</span>\n          <svg class=\"size-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" data-slot=\"icon\">\n  <path fill-rule=\"evenodd\" d=\"M8.75 1A2.75 2.75 0 0 0 6 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5Zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5Z\" clip-rule=\"evenodd\"></path>\n</svg>\n        </button>\n      </span>\n    </div>\n  </div>\n\n    </div>\n  </div>\n</body>",
          "snippet": {
            "name": "react",
            "language": "jsx",
            "version": 4,
            "code": "import { ChatBubbleBottomCenterTextIcon, PaperClipIcon, PencilIcon, TrashIcon } from '@heroicons/react/20/solid'\n\nexport default function Example() {\n  return (\n    <div className=\"relative\">\n      <div aria-hidden=\"true\" className=\"absolute inset-0 flex items-center\">\n        <div className=\"w-full border-t border-gray-300\" />\n      </div>\n      <div className=\"relative flex justify-center\">\n        <span className=\"isolate inline-flex -space-x-px rounded-md shadow-xs\">\n          <button\n            type=\"button\"\n            className=\"relative inline-flex items-center rounded-l-md bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\"\n          >\n            <span className=\"sr-only\">Edit</span>\n            <PencilIcon aria-hidden=\"true\" className=\"size-5\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"relative inline-flex items-center bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\"\n          >\n            <span className=\"sr-only\">Attachment</span>\n            <PaperClipIcon aria-hidden=\"true\" className=\"size-5\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"relative inline-flex items-center bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\"\n          >\n            <span className=\"sr-only\">Annotate</span>\n            <ChatBubbleBottomCenterTextIcon aria-hidden=\"true\" className=\"size-5\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"relative inline-flex items-center rounded-r-md bg-white px-3 py-2 text-gray-400 ring-1 ring-gray-300 ring-inset hover:bg-gray-50 focus:z-10\"\n          >\n            <span className=\"sr-only\">Delete</span>\n            <TrashIcon aria-hidden=\"true\" className=\"size-5\" />\n          </button>\n        </span>\n      </div>\n    </div>\n  )\n}\n"
          },
          "largeWidth": 1280,
          "largeHeight": 100,
          "smallWidth": 375,
          "smallHeight": 100
        }
      ]
    }
  },
  "url": "/plus/ui-blocks/application-ui/layout/dividers",
  "version": "b2adf83a16a94d2e0fb52a1c5f3049f3",
  "clearHistory": false,
  "encryptHistory": false
}